@page "/EditBooking/{BookingId:long}"
@using WebClient.Models
@using WebClient.Data
@using MatBlazor
@inject ITableBookingService tableBookingService
<h3>Editing booking No. @tableBooking.TableBookingId</h3>
<h4>@confirmationMessage</h4>

@if (@tableBooking == null)
{
    <em>Not found</em>
}
else
{
    <EditForm Model="@tableBooking" OnValidSubmit="Edit">
        <DataAnnotationsValidator/>
        <ValidationSummary/>
        <div class="form-group">
            Table:<br/>
            <InputNumber @bind-Value="@tableBooking.Table.TableId"/>
        </div>
        <div class="form-group">
                    People:<br/>
                    <InputNumber @bind-Value="@tableBooking.People"/>
                </div>
        <div class="form-group">
            Date:<br/>
            <MatDatePicker @bind-Value="@tableBooking.BookingDateTime" EnableTime="true" Enable24hours="true" Style="height: inherit"></MatDatePicker>
        </div>
        <p class="actions">
            <button class="btn btn-outline-dark" type="submit">Edit</button>
        </p>
    </EditForm>
}
@code {
    [Parameter]
    public long BookingId { get; set; }

    private TableBooking tableBooking = new TableBooking();
    private string confirmationMessage = "";
    

    protected override async Task OnInitializedAsync()
    {
        tableBooking = await tableBookingService.GetBookingById(BookingId);
    }

    private async Task Edit()
    {
        try
        {
          await tableBookingService.UpdateTableBooking(tableBooking);
            confirmationMessage = "Booking has been successfully edited";
        }
        catch (Exception e)
        {
            confirmationMessage=e.Message;
        }
    }

}