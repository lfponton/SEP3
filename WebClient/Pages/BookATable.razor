@page "/BookATable"
@using WebClient.Models
@using WebClient.Data
@using Microsoft.AspNetCore.Http.Connections
@using Microsoft.AspNetCore.Identity
@using AuthenticationStateProvider = WebClient.Data.AuthenticationStateProvider
@using System.Data
@inject ITableBookingService tableBookingService
@inject NavigationManager navigationManager
@inject AuthenticationStateProvider authenticationStateProvider 
@using MatBlazor


    <div class="container-fluid ">
        <div class="text-center" style="margin-bottom: 3%">
            <h2>Book A Table</h2>
            </div>
        <div class="d-flex justify-content-center" style="margin-bottom: 3%">
            <EditForm Model="newTableBooking" OnValidSubmit="CreateBooking" class="d-flex justify-content-around justify-content-between" style="width: 50%">
                <DataAnnotationsValidator/>
                <ValidationSummary/>
                            <p>@errorMessage</p>


                <InputNumber type="number" @bind-Value="@newTableBooking.People" class="form-control" style="width: 30%" name="people" id="people" placeholder="No. of people"></InputNumber>

                <MatDatePicker @bind-Value="@inputDateTime" EnableTime="true" Format="yyyy-MM-dd'T'HH:mm:ss" Enable24hours="true"></MatDatePicker>
               <div class="form-group d-flex justify-content-center">
                                   <InputTextArea class="form-control" style="width: 50%" @bind-Value="@newTableBooking.Description" name="comments" placeholder="Leave a comment"></InputTextArea>
                               </div>
                <button type="submit" class="btn btn-outline-dark">Book</button>
                
            </EditForm>
        </div>
    </div>




@code {
    private TableBooking newTableBooking = new TableBooking();
  private IList<TableBooking> tableBookings = new List<TableBooking>();
    private IList<TableBooking> tableBookingsToDisplay = new List<TableBooking>();
    private DateTime inputDateTime = DateTime.Today;
    private int people;
    private string errorMessage;
    

    private async Task CreateBooking()
    {
        try
        {
            newTableBooking.BookingDateTime = inputDateTime;
            newTableBooking.Table.TableId = 1;
            newTableBooking = await tableBookingService.CreateTableBooking(newTableBooking);
           // navigationManager.NavigateTo($"/BookingConfirmation/{newTableBooking.TableBookingId}");


        } 
        catch (Exception e)
        {
            errorMessage = e.Message;
           // StateHasChanged();
        }


    }

}