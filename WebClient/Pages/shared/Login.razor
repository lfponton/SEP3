@page "/Login"
@using WebClient.Authentication

@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider

<AuthorizeView>
    <NotAuthorized>
<div class="d-flex justify-content-center align-items-center">
        <div class="card w-50">
            <h4 class="card-header">Login</h4>
            <div class="card-body">
                <div class="form-group">
                    <label>Email</label>
                    <input class="form-control" type="text" placeholder="Email" @bind-value="email"/>
                </div>
                <div class="form-group">
                    <label>Password</label>
                    <input class="form-control" type="Password" placeholder="Password" @bind-value="password"/>
                </div>
                <div style="color:red">@errorMessage</div>
                <button class=" btn btn-primary mr-1" @onclick="PerformLogin">Login</button>
                <NavLink href="/Register" class="btn btn-link">Register</NavLink>
            </div>
        </div>
    </div>
</NotAuthorized>
    <Authorized>
        <a href="" @onclick="PerformLogout">
            Log out
        </a>
    </Authorized>
</AuthorizeView>

@code {
    private string email;
    private string password;
    private string errorMessage;

    // TODO: Missing to include error messages from server
    public async Task PerformLogin() {
        errorMessage = "";
        try {
            await ((CustomAuthenticationStateProvider) AuthenticationStateProvider).ValidateLogin(email, password);
            email = "";
            password = "";
            NavigationManager.NavigateTo("/");
        }
        catch (Exception e) {
            errorMessage = e.Message;
        }
        
    }

    public async Task PerformLogout()
    {
        errorMessage = "";
        email = "";
        password = "";
        try
        {
            ((CustomAuthenticationStateProvider) AuthenticationStateProvider).Logout();
        }
        catch (Exception e)
        {
        }
    }

}