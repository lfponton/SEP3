@page "/ManageBookings"
@using WebClient.Models
@using WebClient.Data.Impl
@using WebClient.Data
@using System.Threading
@inject ITableBookingService tableBookingService
@inject NavigationManager navigationManager
@inject IRestaurantService restaurantService;
@inject NotificationService NotificationService

<h3 class="text-center">ManageBookings</h3>

  <AuthorizeView>
         <NotAuthorized>
             <h3>Please, login.</h3>
         </NotAuthorized>
     </AuthorizeView>
<AuthorizeView Policy="Employee" Context="eContext">
    
        <div></div>
        <h3>Today's bookings <br/> @today.ToLongDateString()</h3>
        
  
    @if (!tableBookings.Any())
    {
        <button class="btn btn-primary" type="button" disabled>
            <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
            Loading...
        </button>
    }
    else
    {
        <table class="table me-2" style="background-color: white; padding: 3em">
            <thead>
            <tr>
                <th>Id</th>
                <th>Date</th>
                <th>People</th>
                <th>Customer</th>
                <th>Table</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            @foreach (var booking in tableBookingsDisplay)
            {
                <tr>
                    <td>@booking.TableBookingId</td>
                    <td>@booking.BookingDateTime</td>
                    <td>@booking.People</td>
                    <td>
                        @if (@booking.Customer != null)
                        {
                            @booking.Customer.FirstName
                            @booking.Customer.LastName
                        }
                    </td>

                    <td>@booking.Table.TableId</td>
                    <td>@booking.Description</td>
                    <td>
                        <button @onclick="@(() => EditBooking(booking))">
                            Edit
                        </button>
                    </td>
                </tr>
            }

            <br/>
            <br/>
<div class="d-flex justify-content-around">
            <h4 >Total people today: @totalOfPeople</h4>
            <div>
                        <b>Restaurant capacity: @restaurant.Capacity</b>
                        <button>Set</button>
                    </div>
</div>
            <button class="btn btn-outline-dark" style="margin-top: 5%; margin-bottom: 5%" @onclick="GoToSeeAllBookings">See all bookings</button>

            <br>
            </tbody>

        </table>
    }
</AuthorizeView>
    
@code {
    private List<TableBooking> tableBookings = new List<TableBooking>();
    private List<TableBooking> tableBookingsDisplay = new List<TableBooking>();
    private int totalOfPeople;
    private DateTime today = DateTime.Today;
    private Restaurant restaurant =new Restaurant();


    protected override async Task OnInitializedAsync()
    {
        tableBookings = await tableBookingService.GetBookings(today);

        restaurant = await restaurantService.GetRestaurant();
        await Timer();
        tableBookingsDisplay = tableBookings.Where(tb => tb.BookingDateTime.Date == today.Date).ToList();
        TotalPeople(tableBookingsDisplay);
    }
    

    private void TotalPeople(List<TableBooking> tableBookingsDisplay)
    {
        totalOfPeople = 0;
        if (tableBookingsDisplay != null)
        {
            foreach (var booking in tableBookingsDisplay)
            {
                totalOfPeople += booking.People;
            }
        }
    }

    private void EditBooking(TableBooking booking)
    {
        navigationManager.NavigateTo($"/EditBooking/{booking.TableBookingId}");
    }

    private void GoToSeeAllBookings()
    {
        navigationManager.NavigateTo("/AllBookings");

    }
    private async Task Timer()
    {
        List<TableBooking> tableBookingsControl = new List<TableBooking>();
        var timer = new Timer(new TimerCallback(async _ =>
        {
            tableBookingsControl = await tableBookingService.GetBookings(today);

            if (tableBookingsControl.Count > tableBookings.Count)
            {
                tableBookings = tableBookingsControl;
                NotificationService.Notify(new NotificationMessage { Severity = NotificationSeverity.Error, Summary = "New Booking!", Duration = 100000 });
            }
        }), null, 40000, 40000);
    }

   

}
